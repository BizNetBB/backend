app:
  security:
    jwt:
      secret-key: ${JWT_SECRET_KEY}
  # Open non-secured endpoints for the gateway
  openApiEndpoints:
    - /actuator
    - /dialosoft-api/auth/login
    - /dialosoft-api/auth/register
    - /dialosoft-api/auth/refresh-token
    - /dialosoft-api/user/test
spring:
  main:
    web-application-type: reactive
  application:
    name: gateway-microservice
  devtools:
    restart:
      enabled: false

  netty:
    max-initial-line-length: 65536
    max-header-size: 65536
    max-chunk-size: 65536
#  docker:
#    compose:
#      enabled: true
#      file: ./docker-compose.yml
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lowerCaseServiceId: true
      httpclient:
        max-header-size: 65536 # max allowed size of header
      routes:
        - id: actuator_route
          uri: http://localhost:${server.port}
          predicates:
            - Path=/actuator/**
        - id: auth_service_hello_world_route
          uri: lb://auth-microservice/
          predicates:
            - Path=/dialosoft-api/hello-world
          filters:
            - AddRequestHeader=X-Request-Service, auth-microservice
            - StripPrefix=1 # remove '/dialosoft-api' before send request to the down service
            - name: JwtAuthenticationFilter
            - name: RoleBasedAuthorizationFilter
              args:
                  requiredRoles: ROLE_USER
        - id: auth_service_routes
          uri: lb://auth-microservice/
          predicates:
            - Path=/dialosoft-api/auth/**
          filters:
            - AddRequestHeader=X-Request-Service, auth-microservice
            - StripPrefix=1
        - id: user_test_service_route
          uri: lb://user-microservice/
          predicates:
            - Path=/dialosoft-api/user/test
          filters:
            - AddRequestHeader=X-Request-Service, user-microservice
            - StripPrefix=1
            - name: NonSpringServicesRoutingFilter # For non-spring-boot services
        - id: user_service_routes
          uri: lb://user-microservice/
          predicates:
            - Path=/dialosoft-api/user/**
          filters:
            - AddRequestHeader=X-Request-Service, user-microservice
            - StripPrefix=1
            - name: NonSpringServicesRoutingFilter
            - name: JwtAuthenticationFilter
            - name: RoleBasedAuthorizationFilter
              args:
                requiredRoles: ROLE_USER
        # * Other service template
#        - id: other_service_routes
#          uri: lb://other-microservice/
#          predicates:
#            - Path=/dialosoft-api/other/**
#          filters:
#            - AddRequestHeader=X-Request-Service, auth-microservice
#            - StripPrefix=1 # remove '/dialosoft-api' before send request to auth-service
#            - name: JwtAuthenticationFilter
#            - name: RoleBasedAuthorizationFilter
#              args:
#                requiredRoles: ROLE_USER # You can omit this, by default is ROLE_USER
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins: "*"
            allowedMethods: "*"
            allowedHeaders: "*"

# Eureka - Registry Service
eureka:
  client:
    transport:
      # Jersey HTTP client, which is the default transport client used by EurekaClient for HTTP communication
      jersey:
        # sets the maximum header size for Jersey, the HTTP client used by Eureka
        max-header-size: 65536

server:
  port: 8080
  server:
    max-http-request-header-size: 65536

logging:
  level:
    root: INFO
    org.springframework.web: DEBUG
    org.springframework.cloud.gateway: DEBUG
    org.springframework.cloud.netflix.eureka: DEBUG
    reactor.netty: DEBUG
    org.springframework.cloud.gateway.handler.RoutePredicateHandlerMapping: DEBUG

management:
  security:
    enabled: false
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    gateway:
      enabled: true
    health:
      show-details: always